@use "sass:color";
@use "sass:math";
@use "sass:map";
@use "variables" as vars;

// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Responsive breakpoints
@mixin respond-below($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: (vars.$breakpoint-xs - 1px)) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: (vars.$breakpoint-sm - 1px)) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: (vars.$breakpoint-md - 1px)) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: (vars.$breakpoint-lg - 1px)) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: (vars.$breakpoint-xl - 1px)) {
      @content;
    }
  } @else if $breakpoint == hd {
    @media (max-width: (vars.$breakpoint-hd - 1px)) {
      @content;
    }
  }
}

// Responsive breakpoints
@mixin respond-above($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: (vars.$breakpoint-xs)) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: (vars.$breakpoint-sm)) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: (vars.$breakpoint-md)) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: (vars.$breakpoint-lg)) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: (vars.$breakpoint-xl)) {
      @content;
    }
  } @else if $breakpoint == hd {
    @media (min-width: (vars.$breakpoint-hd)) {
      @content;
    }
  }
}
